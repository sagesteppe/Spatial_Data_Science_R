[
  {
    "objectID": "Day1.html#section",
    "href": "Day1.html#section",
    "title": "R Data Science: Spatial Data Science I",
    "section": "",
    "text": "Assigned Reading: Geocomputation with R Chapter 2."
  },
  {
    "objectID": "Day1.html#what-is-a-gis",
    "href": "Day1.html#what-is-a-gis",
    "title": "R Data Science: Spatial Data Science I",
    "section": "What is a GIS",
    "text": "What is a GIS\n\n\na Geographic Information System is a system for producing, managing, displaying, and analyzing geographic information.\nGIS do not require computers, but are often synonymous with software\nSpatial Data Science is an emergent field which utilizes data science approaches in a GIS, and is a natural extension of a GIS\n\n\n\n\n\n\nA GIS (Anne Sexton)"
  },
  {
    "objectID": "Day1.html#a-brief-history",
    "href": "Day1.html#a-brief-history",
    "title": "R Data Science: Spatial Data Science I",
    "section": "A Brief History",
    "text": "A Brief History\n\n\n\n\n1854 Cholera outbreak in Soho London kills 616 people\nDr. John Snow used both maps and statistics to identify the source (water pumps) and stop the outbreak.\nfoundation of both Epidemiology & GIS.\n\n\n\n\n\n\nThe Broad Street Pump (John Snow/ National Geographic)\n\n\n\n\n\n\nTook until the 1990s, when compute power become strongrer, for GIS to flourish."
  },
  {
    "objectID": "Day1.html#what-is-spatial-data-science",
    "href": "Day1.html#what-is-spatial-data-science",
    "title": "R Data Science: Spatial Data Science I",
    "section": "What is Spatial Data Science?",
    "text": "What is Spatial Data Science?\n\nGIS has always had big data, and distinct statistics…\n\n\n\n\nGeographic insights, and geospatial analyses to big tabular data sets\n\nIncluding spatial terms in statistical models\n\n\n\n\n\n\nAdvanced statistics ML, and exploratory processes to develop hypotheses\n\nFeature engineering of spatial products"
  },
  {
    "objectID": "Day1.html#why-use-r-as-a-gis-and-for-spatial-data-science",
    "href": "Day1.html#why-use-r-as-a-gis-and-for-spatial-data-science",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Why use R as a GIS and for Spatial Data Science ?",
    "text": "Why use R as a GIS and for Spatial Data Science ?\n\n\nWork flow automation\nRich ecosystem (packages, functions, code-sharing, etc.)\nReproducible\nSelf documenting\nComputationally efficient\nParallel processing/HPC interfaces"
  },
  {
    "objectID": "Day1.html#why-use-rstudio-as-an-ide",
    "href": "Day1.html#why-use-rstudio-as-an-ide",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Why use RStudio as an IDE",
    "text": "Why use RStudio as an IDE\n\n\nthe rich ecosystem of geospatial tools extends beyond R!\ncan use (and document) shell scripts used to download and pre-process data\n\ncan integrate with python\ncan even save and document code used in other GIS systems (e.g. GRASS)\ntie together with rmarkdown! ;-)"
  },
  {
    "objectID": "Day1.html#earth-is-not-a-perfect-sphere",
    "href": "Day1.html#earth-is-not-a-perfect-sphere",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Earth is not a perfect sphere",
    "text": "Earth is not a perfect sphere\n\n\n\nCircumference at equator: 40,075 km (24,901 mi)\nCircumference along meridians: 40,009 km (24,860 mi)\nCertain areas depressed (e.g. Indian Ocean) others raised (e.g. Europe)\n\n\n\n\n\nBlue Marble 2012 (Suomi NPP)"
  },
  {
    "objectID": "Day1.html#the-earth-can-be-represented-as-an-ellipsoid",
    "href": "Day1.html#the-earth-can-be-represented-as-an-ellipsoid",
    "title": "R Data Science: Spatial Data Science I",
    "section": "The Earth can be represented as an Ellipsoid",
    "text": "The Earth can be represented as an Ellipsoid\n\n\n\nA simple 3d geometric shape\nAn ellipsoid is a slightly to greatly ovaliform shape\n\n\n\nModeling the Earth as an ellipsoid increases the accuracy of point locations\n\n\n\n\n\n\n\nEllipsoids"
  },
  {
    "objectID": "Day1.html#however-the-earths-surface-is-not-smooth---geoid",
    "href": "Day1.html#however-the-earths-surface-is-not-smooth---geoid",
    "title": "R Data Science: Spatial Data Science I",
    "section": "However, the Earth’s surface is not smooth - Geoid",
    "text": "However, the Earth’s surface is not smooth - Geoid\n\n\n\nTypes of models to represent planet Earth\n\nInclude gravity, excluding winds and tides\n\nVery accurate since GPS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeoid Cross Section & IGCM Geoid"
  },
  {
    "objectID": "Day1.html#geodetic-datums",
    "href": "Day1.html#geodetic-datums",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Geodetic Datums",
    "text": "Geodetic Datums\n\n\n\n - Reference frame established to represent locations within the frame.\n- Historically these were locally focused and based on Geoids.\n- either horizontal (X & Y) or vertical (Z) features.\n- locations are then measured in relation to the control points.\n\n\n\nComponents:\n\nreference ellipsoid or geoid\n\norigin point (from which measurements run)\n\ncontrol points very strictly measured from the origin\n\n\n\n\n\n\n\n\n\n\n\nNumber One City Datum (Cosmo1976)\n\n\n\n\n\n\n\n\n\nControl Points Number One City Datum\n\n\n\n\n\n::::"
  },
  {
    "objectID": "Day1.html#geodetic-coordinates",
    "href": "Day1.html#geodetic-coordinates",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Geodetic Coordinates",
    "text": "Geodetic Coordinates\n\n\n“The geodetic (or geographic) latitude is the angle between the equatorial plane and the normal (vertical) to the ellipsoid surface at the considered point.” - Proj\n\n\n\n\n\n\\(\\phi\\) = geodetic latitude (north/south)\n\\(\\lambda\\) =longitude (east/west)\nh = ellipsoidal height\n\nN = Normal (plane at right angle to the ellipsoid surface)\n\n\n\n\n\n\n\nAngles on Ellipsoid and Geodetic Coordinates (Peter Mercator)\n\n\n\n\n\n\n\nAngles on Ellipsoid and Geodetic Coordinates (Peter Mercator)"
  },
  {
    "objectID": "Day1.html#coordinate-notation---trigonometric",
    "href": "Day1.html#coordinate-notation---trigonometric",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Coordinate Notation - Trigonometric",
    "text": "Coordinate Notation - Trigonometric\n\nTrigonometric\n\nDegrees Minutes Seconds (DMS), e.g. 42°03’27.7” N\n\nSexagesimal/base 60 (think: minutes in an hour)\n\nDecimal Degrees (DD), e.g. 42.05759 N\n\nDecimal Fractions of a Degree (portion of 360/2)\n\n\nDMS; seldom used in digital formats\n\nDD; almost exclusively used"
  },
  {
    "objectID": "Day1.html#coordinate-notation---conversion",
    "href": "Day1.html#coordinate-notation---conversion",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Coordinate Notation - Conversion",
    "text": "Coordinate Notation - Conversion\n\\[\n\\text{Latitude of Tech} =  42°03'27.7\" N\n\\]\n Convert the latitude of the tech building from DMS to DD\n\\[\n\\text{Decimal Degrees} = \\text{Degrees } + \\frac{\\text{Minutes}}{60} + \\frac{\\text{Seconds}}{3600}\n\\]\n\n\n\nWorkflow\n\n\\[\n42 + (\\frac{03'}{60}) + (\\frac{27.7\"}{3600})\n\\]\n\\[\n42 + 0.05 + 0.007694 = 42.05759 \\text{N Decimal Degrees}\n\\]"
  },
  {
    "objectID": "Day1.html#coordinate-notation---utm",
    "href": "Day1.html#coordinate-notation---utm",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Coordinate Notation - UTM",
    "text": "Coordinate Notation - UTM\n\n\n\nUniversal Transverse Mercator\n\nDivides the world into 60 zones\nFlattens each zone\nMeasures distances in Meters\n\n\n\nCommon for field work, planar measurements of meters.\n\n\n\n\n\n\n\nUTM Zones of the Conterminous USA (ESRI)"
  },
  {
    "objectID": "Day1.html#coordinate-reference-system-crs",
    "href": "Day1.html#coordinate-reference-system-crs",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Coordinate Reference System (CRS)",
    "text": "Coordinate Reference System (CRS)\n\n\n\nSystem for specifying a location on Earth’s surface\nComposed of:\n\na model of earths shape (Geoid or Ellipsoid)\ngeodetic datum\ngenerally also a projection\n\n\n\n\n\n\n\n\nGeographic CRS (A. Krystalli)"
  },
  {
    "objectID": "Day1.html#problems-with-working-on-flat-surfaces",
    "href": "Day1.html#problems-with-working-on-flat-surfaces",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Problems with working on flat surfaces",
    "text": "Problems with working on flat surfaces\nGoing from three to two dimensions does not work well. But we have worked around this. sort of\n\n\n\n\n\n\nOrange Peel (N. Belz)"
  },
  {
    "objectID": "Day1.html#geographic-projected-coordinate-system",
    "href": "Day1.html#geographic-projected-coordinate-system",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Geographic & Projected Coordinate System",
    "text": "Geographic & Projected Coordinate System\n\nGeographic: location on a three-dimensional model of Earths Surface\nProjected: location on a two-dimensional model of Earths Surface"
  },
  {
    "objectID": "Day1.html#major-map-projections-i",
    "href": "Day1.html#major-map-projections-i",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Major Map Projections I",
    "text": "Major Map Projections I\n\nThousands of projections for maps. None are perfect.\nThere are three main types of projections\n\n\n\n\n\n\n\n\n\n\n\nType\nExamples\nPros\nCons\n\n\n\n\nEqual Area\nLambert Cylindrical\nNo distortion of area near equator\nDistorts area near the Poles\n\n\nEqual Distance\nEqui-rectangular\nLooks good in mapping applications\nDistorts both shape and directions\n\n\nConformal\nMercator\nBoundaries are accurate\nDistorts area near the Poles\n\n\nCompromise\n\nSensitive to area and direction\nSensitive to area and direction"
  },
  {
    "objectID": "Day1.html#major-map-projections-ii",
    "href": "Day1.html#major-map-projections-ii",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Major Map Projections II",
    "text": "Major Map Projections II\n\n\n\n\n\n\nMap Projections (D. Strebe)"
  },
  {
    "objectID": "Day1.html#geodesy-takeaways",
    "href": "Day1.html#geodesy-takeaways",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Geodesy Takeaways",
    "text": "Geodesy Takeaways\n\n - There are various models (geoids & ellipsoids) to represent the earths shape\n- Different datums are used to represent different parts of the earth.\n- You will almost always use WGS 84 (based on a ellipsoid – which is fit through a special model of earths gravitational fields a geoid) NAD83 (based on a ellipsoid) for a geographic coordinate system. These +/-1 m from each other across much of North America. More useful than a geoid.\n- You will usually want to use a UTM grid based on WGS or State Planes based on NAD83 for projections.\n- Different coordinates notation systems are used, focus on decimal degrees."
  },
  {
    "objectID": "Day1.html#geographic-data-models-1",
    "href": "Day1.html#geographic-data-models-1",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Geographic Data Models",
    "text": "Geographic Data Models\n\n\n\n\n\n\nVector and Raster Data Models"
  },
  {
    "objectID": "Day1.html#vector-data-in-r",
    "href": "Day1.html#vector-data-in-r",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Vector Data in R",
    "text": "Vector Data in R\n\nVector Data Model represents discrete features on the planet using geometries such as: points, lines, and polygons."
  },
  {
    "objectID": "Day1.html#simple-features---standards",
    "href": "Day1.html#simple-features---standards",
    "title": "R Data Science: Spatial Data Science I",
    "section": "simple features - standards",
    "text": "simple features - standards\n\nOpen Geospatial Consortium ISO 19125-1:2004: adhered to in ESRI, and GDAL.\nFeatures have geometries describing their location, and properties described by attributes.\nPolygons are composed of points, connected by straight lines.\nLines composing polygons cannot intersect"
  },
  {
    "objectID": "Day1.html#simple-features-sf-1---attributes",
    "href": "Day1.html#simple-features-sf-1---attributes",
    "title": "R Data Science: Spatial Data Science I",
    "section": "simple features (sf) 1 - attributes",
    "text": "simple features (sf) 1 - attributes\n\nAttributes of the feature, theoretically devoid of spatial context.\nDescribed in text, numbers, stored in a data frame type object.\nEssentially the fields of a data frame\n\n\n\n\n\n\nTAXON\nDBH\nHEIGHT\n\n\n\n\nRobinia pseudoacacia\n40\n24\n\n\nQuercus alba\n32\n21"
  },
  {
    "objectID": "Day1.html#sf-2---coordinates-form-a-point",
    "href": "Day1.html#sf-2---coordinates-form-a-point",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sf 2 - coordinates form a point",
    "text": "sf 2 - coordinates form a point\n\nall geometries are composed of points.\npoints only require two coordinates, X & Y.\n\nY Latitude (necessary), X Longitude (necessary)\n\nZ Elevation/Depth (uncommon)\n\nM Time or uncertainty of measurement (uncommon)"
  },
  {
    "objectID": "Day1.html#sf-3---points-form-a-sf-geometry-sfgs",
    "href": "Day1.html#sf-3---points-form-a-sf-geometry-sfgs",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sf 3 - Points form a sf geometry (sfg’s)",
    "text": "sf 3 - Points form a sf geometry (sfg’s)\n\nSFG is the spatial topology associated with a feature\nPOINT - one-dimensional location\n\nLINESTRING - two points connected by a string\n\nPOLYGON - Sequence of points connected by strings"
  },
  {
    "objectID": "Day1.html#sf-4---combining-geometries-sfgs",
    "href": "Day1.html#sf-4---combining-geometries-sfgs",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sf 4 - combining geometries (sfg’s)",
    "text": "sf 4 - combining geometries (sfg’s)\n\nTwo or more points, and sets of linestrings, and polygons can be the geometries of a single feature\nMulti(POINT), multi(LINESTRING), multi(POLYGON)\n\nGEOMETRYCOLLECTION - A mixed set of geometry types in the same geometry"
  },
  {
    "objectID": "Day1.html#sf-5---geometries-and-spatial-information-form-a-collection-sfc",
    "href": "Day1.html#sf-5---geometries-and-spatial-information-form-a-collection-sfc",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sf 5 - geometries and spatial information form a collection (sfc)",
    "text": "sf 5 - geometries and spatial information form a collection (sfc)\n\nA list column of S3 type containing attributes of the Geometry/Geometries\nCoordinate Reference System (‘crs’)\n\nPrecision (‘precision’)\n\nBounding box (‘bbox’)\n\nNumber Empty (‘n_empty’)"
  },
  {
    "objectID": "Day1.html#sf-6---recapped",
    "href": "Day1.html#sf-6---recapped",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sf 6 - recapped",
    "text": "sf 6 - recapped\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTAXON\nDBH\nHEIGHT\nLONG\nLAT\ngeometry\n\n\n\n\nRobinia pseudoacacia\n40\n24\n-87.67607\n42.05663\nPOINT (-87.67607 42.05663)\n\n\nQuercus alba\n32\n21\n-87.67399\n42.05715\nPOINT (-87.67399 42.05715)\n\n\n\n\n\n\n\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -87.67607 ymin: 42.05663 xmax: -87.67607 ymax: 42.05663\nGeodetic CRS:  WGS 84\nPrecision:     2 \n\n\nsfc_POINT of length 1; first list element:  'XY' num [1:2] -87.7 42.1\n\n\n\n\nWe now finally have both attributes and coordinates which are forming a point geometry.\nThis is a Simple Feature."
  },
  {
    "objectID": "Day1.html#sp---history",
    "href": "Day1.html#sp---history",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sp - History",
    "text": "sp - History\n\nReleased in 2005\nFirst package to hold all major vector types of geometries\n\nUnified spatial class allowed for support in many spatial statistics packages\n\nImproved mapping of spatial objects\nFormed the centerpiece of spatial statistics in R for over a dozen years."
  },
  {
    "objectID": "Day1.html#sp---spatial-classes-for-topology",
    "href": "Day1.html#sp---spatial-classes-for-topology",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sp - Spatial Classes for Topology",
    "text": "sp - Spatial Classes for Topology\n\nSF holds different geometries in list columns, sp has many different types of objects/classes for holding geometries.\nSpatialMultiPoints\n\nSpatialMultiLines\n\nSpatialMultiPolygons\n\nSpatialMultiGrids"
  },
  {
    "objectID": "Day1.html#sp---structures-of-the-object",
    "href": "Day1.html#sp---structures-of-the-object",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sp - Structures of the object",
    "text": "sp - Structures of the object\n\nLess detailed than sf (‘n_missing’, ‘precision’ lacking)\n\n\n\nFormal class 'SpatialPoints' [package \"sp\"] with 3 slots\n  ..@ coords     : num [1:15, 1:2] -88.6 -105.5 -85.6 -121.6 -124.7 ...\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ : NULL\n  .. .. ..$ : chr [1:2] \"xc\" \"yc\"\n  ..@ bbox       : num [1:2, 1:2] -124.66 4.13 -85.21 94.35\n  .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. ..$ : chr [1:2] \"xc\" \"yc\"\n  .. .. ..$ : chr [1:2] \"min\" \"max\"\n  ..@ proj4string:Formal class 'CRS' [package \"sp\"] with 1 slot\n  .. .. ..@ projargs: chr \"+proj=longlat +datum=WGS84 +no_defs\"\n  .. .. ..$ comment: chr \"GEOGCRS[\\\"WGS 84\\\",\\n    ENSEMBLE[\\\"World Geodetic System 1984 ensemble\\\",\\n        MEMBER[\\\"World Geodetic Sys\"| __truncated__"
  },
  {
    "objectID": "Day1.html#sp---attributes---dataframe",
    "href": "Day1.html#sp---attributes---dataframe",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sp - Attributes - DataFrame",
    "text": "sp - Attributes - DataFrame\n\nAttachment of attributes (e.g. data frame), to a Spatial topology\nEach S*DF is accessed the same way:\n\nSPDF@data[[‘col_name’]]\n\nSPDF$col_name\n\n\n\nstr(SPDF@data)\n\n'data.frame':   15 obs. of  2 variables:\n $ temperature: num  4.03 6.01 5.71 5.87 6.64 5.73 6.6 4.54 5.61 5.58 ...\n $ aspect     : int  17 9 15 19 44 28 20 22 43 41 ...\n\n\n\nWe see here that SF contains all of the spatial information in a Simple Feature Collection which can be tidily tucked away in the geometry list column, in SP the analogue to the SFC is the object itself.\nSP is mostly geometry with a data slot, SF is mostly data frame with a geometry column."
  },
  {
    "objectID": "Day1.html#sp-overview-of-a-spatialdataframe",
    "href": "Day1.html#sp-overview-of-a-spatialdataframe",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sp overview of a Spatial*DataFrame",
    "text": "sp overview of a Spatial*DataFrame\n\n\nData frame is held in a different slot from the geometry and topology\nData frame columns accessed via object@data[[‘colname’]] indexing"
  },
  {
    "objectID": "Day1.html#sp---recapped",
    "href": "Day1.html#sp---recapped",
    "title": "R Data Science: Spatial Data Science I",
    "section": "sp - Recapped",
    "text": "sp - Recapped\n\nIf you need to use spatial statistics, you will come across these objects.\nDon’t sweat them too much; you can always convert from and to sf to run certain analyses"
  },
  {
    "objectID": "Day1.html#raster-components",
    "href": "Day1.html#raster-components",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Raster Components",
    "text": "Raster Components\n\nBounding Coordinate(s)\nCell Resolution (Size of cell)\nDimensions (No of cells in rows and columns)\nCoordinate Reference System (CRS)\n\nNote that both cell sizes, and the resolution of the values in cells can, within reason, be converted to finer and coarser resolution. We will discuss these types of calculations next class."
  },
  {
    "objectID": "Day1.html#example-raster-1-create-frame",
    "href": "Day1.html#example-raster-1-create-frame",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Example Raster 1 Create Frame",
    "text": "Example Raster 1 Create Frame\n Rasters tend to confuse people. We are going to create our own example here before we talk about them much more."
  },
  {
    "objectID": "Day1.html#example-raster-1-background",
    "href": "Day1.html#example-raster-1-background",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Example Raster 1 Background",
    "text": "Example Raster 1 Background\n\nFairy shrimp (endangered) live in bodies of water which dry out in late Spring, and refill in early Fall (playas).\n\nDetermine suitable habitat for fairy shrimp\n\nSatellite imagery at two time points\n\n\n\n\n\n\n\n\nSuprise Valley by: John Glen"
  },
  {
    "objectID": "Day1.html#example-raster-1",
    "href": "Day1.html#example-raster-1",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Example Raster 1",
    "text": "Example Raster 1\n\nempty_raster &lt;- raster(\n  # rasters have 4 bounding edges\n  # Here we define each 'corner' of the raster'\n    xmn = 697129.7, \n    xmx = 811775.7,\n    ymn = 4388466,\n    ymx = 4502382,\n    \n  # Here we set the number of cells 118*118\n    nrows = 118, \n    ncols = 118,\n\n  # set the rasters Coordinate Reference System\n    crs = \"+proj=utm +zone=10 +datum=WGS84\", \n  # we are using the WGS84 ellipsoid, with a UTM planar projection \n)"
  },
  {
    "objectID": "Day1.html#example-raster-1-1",
    "href": "Day1.html#example-raster-1-1",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Example Raster 1",
    "text": "Example Raster 1\n\nThe raster currently looks like this, a frame in space with a specified origin, CRS, and cells, but lacking any content (values)."
  },
  {
    "objectID": "Day1.html#example-raster-2-set-values",
    "href": "Day1.html#example-raster-2-set-values",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Example Raster 2 Set Values",
    "text": "Example Raster 2 Set Values\n\n\n\n\nExample Matrix showing values underlaying a raster layer.\n\n\n0\n1\n1\n0\n1\n0\n0\n1\n\n\n1\n0\n1\n0\n0\n1\n1\n0\n\n\n1\n0\n0\n1\n1\n0\n1\n0\n\n\n0\n1\n1\n0\n1\n0\n0\n1\n\n\n1\n0\n1\n0\n0\n1\n1\n0\n\n\n1\n0\n0\n1\n1\n0\n1\n0\n\n\n\n\n\n\n\nThe values of a raster are essentially a matrix."
  },
  {
    "objectID": "Day1.html#example-raster-3",
    "href": "Day1.html#example-raster-3",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Example Raster 3",
    "text": "Example Raster 3\n\n\n\nThe width of each raster cell is: 971.57627 meters\nThe height of each raster cell is: 965.38983 meters\n\n\nThis example_raster_dec contains: 13924 elements"
  },
  {
    "objectID": "Day1.html#raster-layer",
    "href": "Day1.html#raster-layer",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Raster Layer",
    "text": "Raster Layer\nA single raster layer"
  },
  {
    "objectID": "Day1.html#raster-stack",
    "href": "Day1.html#raster-stack",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Raster Stack",
    "text": "Raster Stack\n\nThe main use of Raster Stacks is to hold layers of similar themes.\n\nEach layer is the same variable from a different time. e.g. mean temerpature by month (12 layers per stack)\nEach layer is a different independent variable (theme) in an analysis. e.g. yearly mean temperature, mean precipitation, etc.\n\n\nIn general these are rasters which have been classified and we want to extract values from or run calculations with. Now what is great about layers, is that we can do one big thing bricks cannot do, we can load in many layers from many files and create a stack of attributes we are interested in studying on the fly."
  },
  {
    "objectID": "Day1.html#raster-brick",
    "href": "Day1.html#raster-brick",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Raster Brick",
    "text": "Raster Brick\n\nMultiple bands of imagery held in the same file\n\nThe sensors of a camera, e.g. Red, Green, and Blue\n\nUsed for performing image classification to produce data raster layers\n\n\nAs I have mentioned rasters are often generated from satellite imagery; we will discuss rasters which are not developed this way next lecture. Historically most pictures are imaged via the use of three bands. These having spectral values of Red, Green, and Blue (RGB) associated with them. For example our .tif file, is composed of three bands. Note that a Rasterbrick is most often used for loading in these types of imaging data, which can then be processed to form a more typical ‘raster’ data set."
  },
  {
    "objectID": "Day1.html#read-in-spatial-data",
    "href": "Day1.html#read-in-spatial-data",
    "title": "R Data Science: Spatial Data Science I",
    "section": "read in spatial data",
    "text": "read in spatial data\n\nconsiderably integration of sf and tidvyerse\nallows for plotting of spatial data for maps\n\nmaps should provide context of studies where results vary/informed by space\n\n\ndata(\"us_states\", package = \"spData\") # lazy load\nus_states &lt;- st_as_sf(us_states) # convert from sp to sf \n\nnorth_carolina &lt;- read_sf( # read in vector data from disk. \n  system.file(\"shape/nc.shp\", package = \"sf\")\n  )"
  },
  {
    "objectID": "Day1.html#plot-borders-of-sf",
    "href": "Day1.html#plot-borders-of-sf",
    "title": "R Data Science: Spatial Data Science I",
    "section": "plot borders of sf",
    "text": "plot borders of sf\n\nMap an sf object using their own geom geom_sf\n\n\nggplot(north_carolina) + \n  geom_sf() + \n  theme_bw() # we will use this theme for class, play around with others, but more\n  # miniminal themes tend to be the best. It's very easy to clutter maps."
  },
  {
    "objectID": "Day1.html#fill-sf-interiors",
    "href": "Day1.html#fill-sf-interiors",
    "title": "R Data Science: Spatial Data Science I",
    "section": "fill sf interiors",
    "text": "fill sf interiors\n\nFill the interior of polygons by a variable\n\n\nggplot(north_carolina) + \n  geom_sf(aes(fill = BIR79)) + \n  # fill the interior of polygons by a variable\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#colour-sf-borders-i",
    "href": "Day1.html#colour-sf-borders-i",
    "title": "R Data Science: Spatial Data Science I",
    "section": "colour sf borders I",
    "text": "colour sf borders I\n\nColour the borders of each polygon in an sf object\nBut why are you doing this?\n\n\nggplot(north_carolina) +\n  geom_sf(\n    aes(color = BIR79),  # color the borders of polygons by a variable\n    lwd = 1 # just making the borders thicker.\n    )  +\n  scale_color_viridis_c(option = \"plasma\", trans = \"sqrt\") +\n  # just using a very colourful color scheme so you can see it. \n  theme_bw()"
  },
  {
    "objectID": "Day1.html#colour-sf-borders-ii",
    "href": "Day1.html#colour-sf-borders-ii",
    "title": "R Data Science: Spatial Data Science I",
    "section": "colour sf borders II",
    "text": "colour sf borders II\n\nColour the border and remove any fill from the polygon interior\n\n\nggplot(north_carolina) +\n  geom_sf(\n    aes(color = BIR79),\n    fill = NA  \n    # fill to 'NA' leaves only the borders of  polygons\n    ) + \n  scale_color_viridis_c(option = \"plasma\", trans = \"sqrt\") +\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#fill-interior-remove-borders",
    "href": "Day1.html#fill-interior-remove-borders",
    "title": "R Data Science: Spatial Data Science I",
    "section": "fill interior & remove borders",
    "text": "fill interior & remove borders\n\nColour the interior of polygons and remove the border\nCan be useful to de-clutter maps\n\n\nggplot(north_carolina) +\n  geom_sf(\n    aes(fill = BIR79),\n    color = NA  # set to 'NA' to 'remove' borders. \n    ) +\n  scale_color_viridis_c(\n    option = \"plasma\", \n    trans = \"sqrt\" # some data have a couple very large  values which can swamp the palettes\n    ) +\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#fill-interior-and-colour-borders",
    "href": "Day1.html#fill-interior-and-colour-borders",
    "title": "R Data Science: Spatial Data Science I",
    "section": "fill interior and colour borders",
    "text": "fill interior and colour borders\n\nfill the interior of polygons and colour the borders\n\n\nggplot(north_carolina) +\n  geom_sf(\n    aes(fill = BIR79, \n        color = FIPS)\n    ) + # both fill and color\n  guides(color = 'none') + # removed the categorical legend (is too big!)\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#do-it-all-at-once",
    "href": "Day1.html#do-it-all-at-once",
    "title": "R Data Science: Spatial Data Science I",
    "section": "do it all at once",
    "text": "do it all at once\n\nall of this could also have been done as:\n\n\nggplot() + # leave empty\n  geom_sf(data = north_carolina, #  need to specify `data = object`. \n          aes(fill = BIR79, \n              color = FIPS)\n          ) + # both fill and color\n  guides(color = 'none') + # removed the categorical legend (is too big!)\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#multiple-sf-data-sets-on-one-map",
    "href": "Day1.html#multiple-sf-data-sets-on-one-map",
    "title": "R Data Science: Spatial Data Science I",
    "section": "multiple sf data sets on one map",
    "text": "multiple sf data sets on one map\n\nUse two data sets to create one map\n\n\nggplot(us_states) + # two data sets.\n  geom_sf() + # will inherit 'us_states' from plot call \n  geom_sf( # now specify the second data set\n    data = north_carolina, \n    fill = 'purple', \n    # set as constant color - don't map using aes()\n    color = NA \n    # this removes borders for a cleaner map. \n    ) +\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#order-of-data-matters",
    "href": "Day1.html#order-of-data-matters",
    "title": "R Data Science: Spatial Data Science I",
    "section": "order of data matters",
    "text": "order of data matters\n\nBe diligent about the order of data sets\n\n\nggplot(north_carolina) + # oh no! we drew over North Carolina!\n  geom_sf(fill = 'purple') +\n  geom_sf(data = us_states) +\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#build-plots-from-the-bottom-up",
    "href": "Day1.html#build-plots-from-the-bottom-up",
    "title": "R Data Science: Spatial Data Science I",
    "section": "build plots from the bottom up",
    "text": "build plots from the bottom up\n\nbuild plots and maps from the ‘bottom’ up\n\n\nggplot() + # two data sets.\n  geom_sf(data = us_states, fill = NA) +\n  geom_sf(data = north_carolina, fill = 'purple') +\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#coord_sf",
    "href": "Day1.html#coord_sf",
    "title": "R Data Science: Spatial Data Science I",
    "section": "coord_sf",
    "text": "coord_sf\n\ncoord_sf is a helpful modifier to geom_sf\nCan set a CRS for the map, modify extent, and change some rendering styles\n\n\nggplot() +\n  geom_sf(data = us_states) +\n  geom_sf(data = north_carolina) +\n  coord_sf(\n    crs = 4267, # we can convert each data set to the same CRS \n    datum = NA # we can remove the grid lines/graticules from plot\n    )"
  },
  {
    "objectID": "Day1.html#crop-map-extent",
    "href": "Day1.html#crop-map-extent",
    "title": "R Data Science: Spatial Data Science I",
    "section": "crop map extent",
    "text": "crop map extent\n\nclip the extent of a map using the bounding box of the data set of interest\n\n\nbound &lt;- st_bbox(north_carolina) \n# retrieve the bounding box from the sfc list column\n\nggplot() +\n  geom_sf(data = us_states) +\n  geom_sf(data = north_carolina, aes(fill = BIR79)) +\n  coord_sf( # use the bbox to 'crop' the extent of the map\n           xlim = c(bound[1], bound[3]), \n           ylim = c(bound[2], bound[4])\n           ) +\n  theme_bw()"
  },
  {
    "objectID": "Day1.html#optional-assignments",
    "href": "Day1.html#optional-assignments",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Optional Assignments",
    "text": "Optional Assignments\nIf you are interested in how Drone/LiDAR data are collected please check out the ‘RMBL Spatial Data Science Webinar Series’:\n\nhttps://github.com/ikb-rmbl/SpatialDataScienceWebinars2020\nCollecting UAS Data (Video): https://youtu.be/Pq8btEZRCvM (1.25 hours)"
  },
  {
    "objectID": "Day1.html#assignments-1",
    "href": "Day1.html#assignments-1",
    "title": "R Data Science: Spatial Data Science I",
    "section": "Assignments",
    "text": "Assignments\nFor next Lecture:\nAssigned Reading: Chapter 3 of Spatial Data Science\nFuture Bonus SDS Office Hours\nWednesday Night at 5:00 - 6:00.\nNotes on this Lab\nMy lecture notes are in the R script I used to generate all of the novel figures for this presentation. Likewise this presentation is an .HTML file and can be launched from your computer (it was rendered directly from R using the script)."
  }
]