3/60
27.7/3600
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, comment = "", fig.align="center")
p <- file.path('..', '..', 'spatial_lecture_data', 'Chicago_Neighborhoods')
files <- file.path('p', list.files('p', ".shp"))
chi_neighb <- read_sf(files)
rm(files)
files <- file.path(p, list.files(p, ".shp"))
chi_neighb <- read_sf(files)
rm(files)
chi_neighb <- read_sf(files)
source(file.path('..', '..', 'scripts', 'functions.R'))
shhh <- suppressPackageStartupMessages #  silence messages.
shhh(library(tidyverse))
shhh(library(raster))
shhh(library(terra))
shhh(library(sf))
shhh(library(spData))
shhh(library(parallel))
shhh(library(fields))
shhh(library(spdep))
shhh(library(gstat))
shhh(library(spatstat))
source(file.path('..', '..', 'scripts', 'functions.R'))
rm(shhh)
p <- file.path('..', '..', 'spatial_lecture_data', 'Chicago_Neighborhoods')
files <- file.path(p, list.files(p, ".shp"))
chi_neighb <- read_sf(files)
rm(files)
file.path('..', '..', 'pictures', 'USGS_GIS_Anne_Sexton.jpg')
```{r}file.path('..', '..', 'pictures', 'USGS_GIS_Anne_Sexton.jpg')```
`{r}file.path('..', '..', 'pictures', 'USGS_GIS_Anne_Sexton.jpg')`
`{r file.path('..', '..', 'pictures', 'USGS_GIS_Anne_Sexton.jpg')`
file.path('..', '..', 'pictures', 'USGS_GIS_Anne_Sexton.jpg')
`{r file.path('..', '..', 'pictures', 'USGS_GIS_Anne_Sexton.jpg')`
dec_lakes_r <- raster(file.path(path, files.tif[1]))
shhh <- suppressPackageStartupMessages
shhh(library(sp))
shhh(library(sf))
shhh(library(raster))
shhh(library(tidyverse))
shhh(library(terra))
rm(shhh)
path <- file.path('..', 'spatial_lecture_data', 'sentinel_imagery')
files <- list.files(path, ".shp")
dec_lakes_v <- read_sf(file.path(path, files), quiet = T) %>%
mutate(Data_source = 'Sentinel2') %>%
mutate(Processing = 'DL from Earth Explorer, manually georeferenced, and mapped') %>%
mutate(Date = as.POSIXct('2021/12/05', '%Y/%m/%d', tz = "US/Pacific-New"))
path <- file.path('..', '..', 'spatial_lecture_data', 'sentinel_imagery')
files <- list.files(path, ".shp")
dec_lakes_v <- read_sf(file.path(path, files), quiet = T) %>%
mutate(Data_source = 'Sentinel2') %>%
mutate(Processing = 'DL from Earth Explorer, manually georeferenced, and mapped') %>%
mutate(Date = as.POSIXct('2021/12/05', '%Y/%m/%d', tz = "US/Pacific-New"))
st_precision(dec_lakes_v) <- 50 # note I am saying each of the points I drew were within 50 meters of the true location. This is not important but I populate for an example below. We are in meters because we are in UTM.
oct_lakes_v <- dec_lakes_v %>% filter(id %in% c(1,2,3,5,6,12)) %>%
mutate(Date = as.POSIXct('2021/10/16', '%Y/%m/%d', tz = "US/Pacific-New"))# gui's are confusing.
rm(files.shp, oct_lakes_v)
files.tif <- list.files(path, ".tif")
dec_lakes_r <- raster(file.path(path, files.tif[1]))
oct_lakes_r <- raster(file.path(path, files.tif[3]))
reclass_first <- matrix(
c(0, 1, NA,
1 ,50, 0,
50, 250, 1),
nrow = 3,
ncol = 3,
byrow = T)
dec_lakes_r_classified_c <- reclassify(dec_lakes_r, reclass_first)
oct_lakes_r_classified_c <- reclassify(oct_lakes_r, reclass_first)
#plot(dec_lakes_r_classified_c) # check this has an intermediate
# step we will be able to remove some of
#barplot(dec_lakes_r_classified_c,
#        main = "Number of pixels in each class")
dec_lakes_r_classified_f <- aggregate(dec_lakes_r_classified_c, 7.0)
oct_lakes_r_classified_f <- aggregate(oct_lakes_r_classified_c, 7.0)
reclass_second <- matrix(
c(0, 0.5, 0,
0.5, 1, 1),
nrow = 2,
ncol = 3,
byrow = T)
dec_lakes_r_classified_f <- reclassify(dec_lakes_r_classified_f, reclass_second)
oct_lakes_r_classified_f <- reclassify(oct_lakes_r_classified_f, reclass_second)
rm(reclass_first, reclass_second, dec_lakes_r_classified_c, oct_lakes_r_classified_c, oct_lakes_r)
cell_count <- function(x){
obj_name <- deparse(substitute(x))
writeLines(paste0('This ', obj_name, ' contains: ', nrow(x) * ncol(x), ' elements'))
}
resolution_of_raster <- function(x){
writeLines(paste0('The width of each raster cell is: ',
round((x@extent@xmax - x@extent@xmin)/x@ncols, 5),
' meters'))
writeLines(paste0('The height of each raster cell is: ',
round((x@extent@ymax - x@extent@ymin)/x@nrows, 5),
' meters'))
}
ext_rast <- st_bbox(dec_lakes_r)
grid <- st_make_grid(ext_rast,  # create a fishnet to emulate the idea of an empty raster ! :-)
n = c(118, 118),
what = "polygons",
square = TRUE,
flat_topped = FALSE)
# st_write(grid, 'Example_HoneyLake_Grid.shp')
empty_raster <- raster(
# A raster is composed of four perpendicular lines.
# Here we define each 'edge' of the raster'
xmn = 697129.7,
xmx = 811775.7,
ymn = 4388466,
ymx = 4502382,
nrows = 118, # we are creating 100 cells.
ncols = 118, # We can calculate the resolution of these below.
crs = "+proj=utm +zone=10 +datum=WGS84",
# set the rasters Coordinate Reference System
)
rast_vals_num <- as.integer(as.vector(as.numeric(dec_lakes_r_classified_f@data@values)))
raster_matrix <- matrix(rast_vals_num, # fill matrix with values,
nrow = empty_raster@nrows, # create matrix same dimensions as raster
ncol = empty_raster@ncols, # create matrix same dimensions as raster
byrow = T) #ensure filling of matrix goes from upper left to lower right.
example_raster_dec <- setValues(empty_raster, raster_matrix)
example_raster_oct <- setValues(empty_raster, oct_lakes_r_classified_f@data@values )
# plot(example_raster_dec)
# plot(example_raster_oct)
fake_data <- matrix(c(0,1,1,0,1,0),
nrow = 6,
ncol = 8,
byrow=T)
rm(fake_data, ext_rast, grid)
::: {style="float: right; width: 30%; font-size: 0.8em; color: #cbc4c3; text-align: center;"}
::: {style="float: right; width: 30%; font-size: 0.8em; color: #cbc4c3; text-align: center;"}
knitr::include_graphics(file.path('..', '..', 'pictures', 'Number_One_City_Datum_Cosmo1976.jpg'))
p <- file.path('..', '..', 'spatial_lecture_data', 'Elevation_Benchmarks.csv')
p <- file.path('..', '..', 'spatial_lecture_data', 'Chicago_Neighborhoods')
files <- file.path(p, list.files(p, ".shp"))
chicago_nghbrh <- read_sf(files)
utm_grid <- read_sf(
file.path('..', '..', 'spatial_lecture_data', 'World_UTM_Grid',
'0f893164-d038-48ff-98dd-9fefb26127d3202034-1-145zfwr.nwf1.shp')) %>%
filter(ZONE > 9 & ZONE < 20) %>%
filter(ROW_ %in% LETTERS[18:21]) %>%
group_by(ZONE) %>%
summarize(geometry = st_union(geometry))
`{r file.path('..', '..', 'pictures', 'John_Snow_Cholera_by_National_Geographic.jpg')`
file.path('..', '..', 'pictures', 'John_Snow_Cholera_by_National_Geographic.jpg')
